import {
  ArrowRightIcon,
  ErrorMessage,
  Input,
  InputButton,
  Spacer,
  fontSize,
  iconSize,
  newStyled,
  spacing
} from "./chunk-FZ33VQ4Q.js";
import {
  require_jsx_runtime
} from "./chunk-UMZUPRA3.js";
import {
  require_react
} from "./chunk-TUKKSTYG.js";
import {
  init_shim
} from "./chunk-ZGMFR26H.js";
import {
  __toESM
} from "./chunk-IKJM6GHQ.js";

// node_modules/@thirdweb-dev/react/dist/InputSelectionUI-df66b9d3.browser.esm.js
init_shim();
var import_react = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var TextDivider = newStyled.div`
  display: flex;
  align-items: center;
  color: ${(p) => p.theme.text.secondary};
  font-size: ${fontSize.sm};
  &::before,
  &::after {
    content: "";
    flex: 1;
    border-bottom: 1px solid ${(p) => p.theme.bg.elevated};
  }

  span {
    margin: 0 1rem;
  }
`;
function InputSelectionUI(props) {
  const [input, setInput] = (0, import_react.useState)("");
  const singleWallet = props.supportedWallets.length === 1;
  const [error, setError] = (0, import_react.useState)();
  const [showError, setShowError] = (0, import_react.useState)(false);
  const handleSelect = () => {
    setShowError(true);
    if (!input || !!error) {
      return;
    }
    props.onSelect(input);
  };
  const renderingError = showError && !!error || !input && !!props.emptyErrorMessage && showError;
  return (0, import_jsx_runtime.jsxs)("div", {
    children: [(0, import_jsx_runtime.jsxs)("div", {
      style: {
        position: "relative"
      },
      children: [(0, import_jsx_runtime.jsx)(Input, {
        placeholder: props.placeholder,
        variant: "secondary",
        type: props.type,
        name: props.name,
        value: input,
        "data-error": renderingError,
        onChange: (e) => {
          setInput(e.target.value);
          if (props.errorMessage) {
            setError(props.errorMessage(e.target.value));
          } else {
            setError(void 0);
          }
        },
        onKeyDown: (e) => {
          if (e.key === "Enter") {
            handleSelect();
          }
        }
      }), (0, import_jsx_runtime.jsx)(CircleInputButton, {
        onClick: () => {
          handleSelect();
        },
        color: "inverted",
        type: "button",
        children: (0, import_jsx_runtime.jsx)(ArrowRightIcon, {
          width: iconSize.sm,
          height: iconSize.sm
        })
      })]
    }), showError && error && (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
      children: [(0, import_jsx_runtime.jsx)(Spacer, {
        y: "xs"
      }), (0, import_jsx_runtime.jsx)(ErrorMessage, {
        children: error
      })]
    }), !(showError && error) && !input && props.emptyErrorMessage && showError && (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
      children: [(0, import_jsx_runtime.jsx)(Spacer, {
        y: "xs"
      }), (0, import_jsx_runtime.jsx)(ErrorMessage, {
        children: props.emptyErrorMessage
      })]
    }), !singleWallet && (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
      children: [(0, import_jsx_runtime.jsx)(Spacer, {
        y: "lg"
      }), (0, import_jsx_runtime.jsx)(TextDivider, {
        children: (0, import_jsx_runtime.jsx)("span", {
          children: " OR "
        })
      }), (0, import_jsx_runtime.jsx)(Spacer, {
        y: "md"
      })]
    })]
  });
}
var CircleInputButton = newStyled(InputButton)`
  background: ${(p) => p.theme.bg.highlighted};
  border-radius: 50%;
  padding: ${spacing.xxs};
  color: ${(p) => p.theme.text.neutral};
  position: absolute;
  top: 50%;
  right: ${spacing.sm};
  transform: translateY(-50%);
  &:hover {
    color: ${(p) => p.theme.text.neutral};
  }
`;

export {
  TextDivider,
  InputSelectionUI
};
//# sourceMappingURL=chunk-UDQEC4N7.js.map

{
  "version": 3,
  "sources": ["../../@thirdweb-dev/sdk/dist/drop-erc1155-history-72d2f40d.browser.esm.js"],
  "sourcesContent": ["import { _ as _defineProperty } from './QueryParams-7d9473b5.browser.esm.js';\nimport { BigNumber } from 'ethers';\n\n/**\n * Manages history for Edition Drop contracts\n * @public\n */\nclass DropErc1155History {\n  constructor(events) {\n    _defineProperty(this, \"events\", void 0);\n    this.events = events;\n  }\n\n  /**\n   * Get all claimer addresses\n   *\n   * @remarks Get a list of all the addresses that have claimed a token\n   * @param tokenId - the tokenId of the NFT to get the addresses of*\n   * @returns - A unique list of addresses that claimed the token\n   * @example\n   * ```javascript\n   * const tokenId = \"0\";\n   * const allClaimerAddresses = await contract.history.getAllClaimerAddresses(tokenId);\n   * ```\n   */\n  async getAllClaimerAddresses(tokenId) {\n    const a = (await this.events.getEvents(\"TokensClaimed\")).filter(e => e.data && BigNumber.isBigNumber(e.data.tokenId) ? e.data.tokenId.eq(tokenId) : false);\n    return Array.from(new Set(a.filter(b => typeof b.data?.claimer === \"string\").map(b => b.data.claimer)));\n  }\n}\n\nexport { DropErc1155History as D };\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AACA;AAMA,IAAM,qBAAN,MAAyB;AAAA,EACvB,YAAY,QAAQ;AAClB,oBAAgB,MAAM,UAAU,MAAM;AACtC,SAAK,SAAS;AAAA,EAChB;AAAA,EAcA,MAAM,uBAAuB,SAAS;AACpC,UAAM,KAAK,MAAM,KAAK,OAAO,UAAU,eAAe,GAAG,OAAO,OAAK,EAAE,QAAQ,UAAU,YAAY,EAAE,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,GAAG,OAAO,IAAI,KAAK;AACzJ,WAAO,MAAM,KAAK,IAAI,IAAI,EAAE,OAAO,OAAE;AA3BzC;AA2B4C,sBAAO,OAAE,SAAF,mBAAQ,aAAY;AAAA,KAAQ,EAAE,IAAI,OAAK,EAAE,KAAK,OAAO,CAAC,CAAC;AAAA,EACxG;AACF;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../@thirdweb-dev/wallets/evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.browser.esm.js"],
  "sourcesContent": ["import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, b as _classPrivateFieldGet, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-99b78e4a.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-60b19604.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport { U as UserRejectedRequestError, S as SwitchChainError } from '../../../../dist/errors-105ad187.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\n/**\n * Wallets that support chain switching through WalletConnect\n * - imToken (token.im)\n * - MetaMask (metamask.io)\n * - Rainbow (rainbow.me)\n * - Trust Wallet (trustwallet.com)\n */\n// const switchChainAllowedRegex = /(imtoken|metamask|rainbow|trust wallet)/i;\n\nconst LAST_USED_CHAIN_ID = \"last-used-chain-id\";\nconst LAST_SESSION = \"last-session\";\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _storage = /*#__PURE__*/new WeakMap();\nvar _handleConnected = /*#__PURE__*/new WeakSet();\nvar _removeListeners = /*#__PURE__*/new WeakSet();\nclass WalletConnectV1Connector extends WagmiConnector {\n  constructor(config) {\n    super(config);\n    _classPrivateMethodInitSpec(this, _removeListeners);\n    _classPrivateMethodInitSpec(this, _handleConnected);\n    _defineProperty(this, \"id\", walletIds.walletConnectV1);\n    _defineProperty(this, \"name\", \"WalletConnectV1\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _storage, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"walletName\", void 0);\n    _defineProperty(this, \"onSwitchChain\", () => {\n      this.emit(\"message\", {\n        type: \"switch_chain\"\n      });\n    });\n    _defineProperty(this, \"onDisplayUri\", async (error, payload) => {\n      if (error) {\n        this.emit(\"message\", {\n          data: error,\n          type: \"display_uri_error\"\n        });\n      }\n      this.emit(\"message\", {\n        data: payload.params[0],\n        type: \"display_uri\"\n      });\n    });\n    _defineProperty(this, \"onRequestSent\", (error, payload) => {\n      if (error) {\n        this.emit(\"message\", {\n          data: error,\n          type: \"request\"\n        });\n      }\n      this.emit(\"message\", {\n        data: payload.params[0],\n        type: \"request\"\n      });\n    });\n    _defineProperty(this, \"onMessage\", message => {\n      this.emit(\"message\", message);\n    });\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      _classPrivateFieldGet(this, _storage).setItem(LAST_USED_CHAIN_ID, String(chainId));\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", async () => {\n      this.walletName = undefined;\n      _classPrivateFieldGet(this, _storage).removeItem(LAST_USED_CHAIN_ID);\n      _classPrivateFieldGet(this, _storage).removeItem(LAST_SESSION);\n      _classPrivateMethodGet(this, _removeListeners, _removeListeners2).call(this);\n      this.emit(\"disconnect\");\n    });\n    _classPrivateFieldSet(this, _storage, config.storage);\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const lastUsedChainIdStr = await _classPrivateFieldGet(this, _storage).getItem(LAST_USED_CHAIN_ID);\n        const lastUsedChainId = lastUsedChainIdStr ? parseInt(lastUsedChainIdStr) : undefined;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) {\n          targetChainId = lastUsedChainId;\n        }\n      }\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: true\n      });\n      this.setupListeners();\n\n      // Defer message to the next tick to ensure wallet connect data (provided by `.enable()`) is available\n      setTimeout(() => this.emit(\"message\", {\n        type: \"connecting\"\n      }), 0);\n      const accounts = await provider.enable();\n      const account = utils.getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      // Not all WalletConnect options support programmatic chain switching\n      // Only enable for wallet options that do\n      this.walletName = provider.connector?.peerMeta?.name ?? \"\";\n\n      // switch to target chainId\n      if (chainId) {\n        try {\n          await this.switchChain(chainId);\n          id = chainId;\n          unsupported = this.isChainUnsupported(id);\n        } catch (e) {\n          console.error(`could not switch to desired chain id: ${chainId} `, e);\n        }\n      }\n      _classPrivateMethodGet(this, _handleConnected, _handleConnected2).call(this);\n      this.emit(\"connect\", {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      });\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/user closed modal/i.test(error.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.disconnect();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = provider.accounts;\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    let {\n      chainId,\n      create\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Force create new provider\n    if (!_classPrivateFieldGet(this, _provider) || chainId || create) {\n      const rpc = !this.options?.infuraId ? this.chains.reduce((rpc_, chain) => ({\n        ...rpc_,\n        [chain.chainId]: chain.rpc[0]\n      }), {}) : {};\n      const WalletConnectProvider = (await import('../../../../dist/index-42b0f5f5.browser.esm.js')).default;\n      const sessionStr = await _classPrivateFieldGet(this, _storage).getItem(LAST_SESSION);\n      const session = sessionStr ? JSON.parse(sessionStr) : undefined;\n      this.walletName = session?.peerMeta?.name || undefined;\n      _classPrivateFieldSet(this, _provider, new WalletConnectProvider({\n        ...this.options,\n        chainId,\n        rpc: {\n          ...rpc,\n          ...this.options?.rpc\n        },\n        session: session ? session : undefined\n      }));\n    }\n    return _classPrivateFieldGet(this, _provider);\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider({\n      chainId\n    }), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const chainIdHex = utils.hexValue(chainId);\n    try {\n      // Set up a race between `wallet_switchEthereumChain` & the `chainChanged` event\n      // to ensure the chain has been switched. This is because there could be a case\n      // where a wallet may not resolve the `wallet_switchEthereumChain` method, or\n      // resolves slower than `chainChanged`.\n      await Promise.race([provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: chainIdHex\n        }]\n      }), new Promise(res => this.on(\"change\", _ref => {\n        let {\n          chain\n        } = _ref;\n        if (chain?.id === chainId) {\n          res(chainId);\n        }\n      }))]);\n      return this.chains.find(x => x.chainId === chainId) ?? {\n        chainId: chainId,\n        name: `Chain ${chainIdHex}`,\n        network: `${chainIdHex}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        shortName: \"eth\",\n        chain: \"ETH\",\n        slug: \"ethereum\",\n        testnet: false\n      };\n    } catch (error) {\n      const message = typeof error === \"string\" ? error : error?.message;\n      if (/user rejected request/i.test(message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      const chain = this.chains.find(x => x.chainId === chainId);\n\n      // if chain is not supported\n      if (!chain) {\n        throw new SwitchChainError(`Chain ${chainId} is not added in the list of supported chains`);\n      }\n\n      // if chain is not configured in the wallet\n      if (/Unrecognized chain ID/i.test(message)) {\n        // configure it\n        this.emit(\"message\", {\n          type: \"add_chain\"\n        });\n        const blockExplorerUrls = this.getBlockExplorerUrls(chain);\n        await provider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [{\n            chainId: chainIdHex,\n            chainName: chain.name,\n            nativeCurrency: chain.nativeCurrency,\n            rpcUrls: chain.rpc,\n            blockExplorerUrls\n          }]\n        });\n        return chain;\n      } else {\n        throw new SwitchChainError(error);\n      }\n    }\n  }\n  async setupListeners() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      return;\n    }\n    _classPrivateFieldGet(this, _provider).on(\"accountsChanged\", this.onAccountsChanged);\n    _classPrivateFieldGet(this, _provider).on(\"chainChanged\", this.onChainChanged);\n    _classPrivateFieldGet(this, _provider).on(\"disconnect\", this.onDisconnect);\n    _classPrivateFieldGet(this, _provider).on(\"message\", this.onMessage);\n    _classPrivateFieldGet(this, _provider).on(\"switchChain\", this.onSwitchChain);\n    _classPrivateFieldGet(this, _provider).on(\"display_uri\", this.onDisplayUri);\n    _classPrivateFieldGet(this, _provider).on(\"call_request_sent\", this.onRequestSent);\n  }\n}\nasync function _handleConnected2() {\n  const session = _classPrivateFieldGet(this, _provider)?.connector.session;\n  this.walletName = session?.peerMeta?.name || \"\";\n  const sessionStr = JSON.stringify(session);\n  _classPrivateFieldGet(this, _storage).setItem(LAST_SESSION, sessionStr);\n}\nfunction _removeListeners2() {\n  if (!_classPrivateFieldGet(this, _provider)) {\n    return;\n  }\n  _classPrivateFieldGet(this, _provider).removeListener(\"accountsChanged\", this.onAccountsChanged);\n  _classPrivateFieldGet(this, _provider).removeListener(\"chainChanged\", this.onChainChanged);\n  _classPrivateFieldGet(this, _provider).removeListener(\"disconnect\", this.onDisconnect);\n  _classPrivateFieldGet(this, _provider).removeListener(\"message\", this.onMessage);\n  _classPrivateFieldGet(this, _provider).removeListener(\"switchChain\", this.onSwitchChain);\n  _classPrivateFieldGet(this, _provider).removeListener(\"display_uri\", this.onDisplayUri);\n  _classPrivateFieldGet(this, _provider).removeListener(\"call_request_sent\", this.onRequestSent);\n}\n\nexport { WalletConnectV1Connector };\n"],
  "mappings": "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",
  "names": []
}

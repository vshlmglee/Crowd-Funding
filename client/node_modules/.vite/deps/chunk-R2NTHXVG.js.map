{
  "version": 3,
  "sources": ["../../@thirdweb-dev/react/dist/paperWallet-6bbe13a1.browser.esm.js"],
  "sourcesContent": ["import { PaperWallet } from '@thirdweb-dev/wallets';\nimport { useConnect } from '@thirdweb-dev/react-core';\nimport { useRef, useEffect } from 'react';\nimport { a as Flex, b as Spinner } from './basic-72632cb3.browser.esm.js';\nimport { I as InputSelectionUI } from './InputSelectionUI-df66b9d3.browser.esm.js';\nimport { jsx } from 'react/jsx-runtime';\nimport '@emotion/react';\nimport '@emotion/styled';\nimport '@radix-ui/colors';\nimport '@radix-ui/react-icons';\n\nconst paperWallet = config => {\n  return {\n    id: PaperWallet.id,\n    meta: PaperWallet.meta,\n    create(options) {\n      return new PaperWallet({\n        ...options,\n        ...config\n      });\n    },\n    selectUI: PaperSelectionUI,\n    connectUI: PaperConnectionUI\n  };\n};\nconst PaperSelectionUI = props => {\n  return /*#__PURE__*/jsx(InputSelectionUI, {\n    onSelect: props.onSelect,\n    placeholder: \"Enter your email address\",\n    name: \"email\",\n    type: \"email\",\n    errorMessage: input => {\n      const emailRegex = /^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,})$/g;\n      const isValidEmail = emailRegex.test(input);\n      if (!isValidEmail) {\n        return \"Invalid email address\";\n      }\n    },\n    emptyErrorMessage: \"email address is required\",\n    supportedWallets: props.supportedWallets\n  });\n};\nconst PaperConnectionUI = _ref => {\n  let {\n    close,\n    walletConfig,\n    open,\n    selectionData,\n    supportedWallets\n  } = _ref;\n  const connectPrompted = useRef(false);\n  const connect = useConnect();\n  const singleWallet = supportedWallets.length === 1;\n  useEffect(() => {\n    if (connectPrompted.current) {\n      return;\n    }\n    connectPrompted.current = true;\n    (async () => {\n      close();\n      try {\n        await connect(walletConfig, {\n          email: selectionData\n        });\n      } catch (e) {\n        if (!singleWallet) {\n          open();\n        }\n        console.error(e);\n      }\n    })();\n  }, [connect, walletConfig, close, open, singleWallet, selectionData]);\n  return /*#__PURE__*/jsx(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    style: {\n      minHeight: \"250px\"\n    },\n    children: /*#__PURE__*/jsx(Spinner, {\n      size: \"md\",\n      color: \"primary\"\n    })\n  });\n};\n\nexport { paperWallet };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,mBAAkC;AAGlC,yBAAoB;AAMpB,IAAM,cAAc,YAAU;AAC5B,SAAO;AAAA,IACL,IAAI,YAAY;AAAA,IAChB,MAAM,YAAY;AAAA,IAClB,OAAO,SAAS;AACd,aAAO,IAAI,YAAY;AAAA,QACrB,GAAG;AAAA,QACH,GAAG;AAAA,MACL,CAAC;AAAA,IACH;AAAA,IACA,UAAU;AAAA,IACV,WAAW;AAAA,EACb;AACF;AACA,IAAM,mBAAmB,WAAS;AAChC,aAAoB,wBAAI,kBAAkB;AAAA,IACxC,UAAU,MAAM;AAAA,IAChB,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc,WAAS;AACrB,YAAM,aAAa;AACnB,YAAM,eAAe,WAAW,KAAK,KAAK;AAC1C,UAAI,CAAC,cAAc;AACjB,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,mBAAmB;AAAA,IACnB,kBAAkB,MAAM;AAAA,EAC1B,CAAC;AACH;AACA,IAAM,oBAAoB,UAAQ;AAChC,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,sBAAkB,qBAAO,KAAK;AACpC,QAAM,UAAU,WAAW;AAC3B,QAAM,eAAe,iBAAiB,WAAW;AACjD,8BAAU,MAAM;AACd,QAAI,gBAAgB,SAAS;AAC3B;AAAA,IACF;AACA,oBAAgB,UAAU;AAC1B,KAAC,YAAY;AACX,YAAM;AACN,UAAI;AACF,cAAM,QAAQ,cAAc;AAAA,UAC1B,OAAO;AAAA,QACT,CAAC;AAAA,MACH,SAAS,GAAP;AACA,YAAI,CAAC,cAAc;AACjB,eAAK;AAAA,QACP;AACA,gBAAQ,MAAM,CAAC;AAAA,MACjB;AAAA,IACF,GAAG;AAAA,EACL,GAAG,CAAC,SAAS,cAAc,OAAO,MAAM,cAAc,aAAa,CAAC;AACpE,aAAoB,wBAAI,MAAM;AAAA,IAC5B,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,OAAO;AAAA,MACL,WAAW;AAAA,IACb;AAAA,IACA,cAAuB,wBAAI,SAAS;AAAA,MAClC,MAAM;AAAA,MACN,OAAO;AAAA,IACT,CAAC;AAAA,EACH,CAAC;AACH;",
  "names": []
}

import {
  Erc20,
  _defineProperty,
  buildTransactionFunction
} from "./chunk-6GQJFAXU.js";
import {
  init_shim
} from "./chunk-ZGMFR26H.js";

// node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-7f7c4cb5.browser.esm.js
init_shim();
var StandardErc20 = class {
  get chainId() {
    return this._chainId;
  }
  constructor(contractWrapper, storage, chainId) {
    _defineProperty(this, "contractWrapper", void 0);
    _defineProperty(this, "storage", void 0);
    _defineProperty(this, "erc20", void 0);
    _defineProperty(this, "_chainId", void 0);
    _defineProperty(this, "transfer", buildTransactionFunction(async (to, amount) => {
      return this.erc20.transfer.prepare(to, amount);
    }));
    _defineProperty(this, "transferFrom", buildTransactionFunction(async (from, to, amount) => {
      return this.erc20.transferFrom.prepare(from, to, amount);
    }));
    _defineProperty(this, "setAllowance", buildTransactionFunction(async (spender, amount) => {
      return this.erc20.setAllowance.prepare(spender, amount);
    }));
    _defineProperty(this, "transferBatch", buildTransactionFunction(async (args) => {
      return this.erc20.transferBatch.prepare(args);
    }));
    this.contractWrapper = contractWrapper;
    this.storage = storage;
    this.erc20 = new Erc20(this.contractWrapper, this.storage, chainId);
    this._chainId = chainId;
  }
  onNetworkUpdated(network) {
    this.contractWrapper.updateSignerOrProvider(network);
  }
  getAddress() {
    return this.contractWrapper.readContract.address;
  }
  async get() {
    return this.erc20.get();
  }
  async balance() {
    return await this.erc20.balance();
  }
  async balanceOf(address) {
    return this.erc20.balanceOf(address);
  }
  async totalSupply() {
    return await this.erc20.totalSupply();
  }
  async allowance(spender) {
    return await this.erc20.allowance(spender);
  }
  async allowanceOf(owner, spender) {
    return await this.erc20.allowanceOf(owner, spender);
  }
};

export {
  StandardErc20
};
//# sourceMappingURL=chunk-OXAJC4ZB.js.map
